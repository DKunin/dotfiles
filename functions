# Create a new directory and enter it
function mk() {
  mkdir -p "$@" && cd "$@"
}

# Extra many types of compressed packages
# Credit: http://nparikh.org/notes/zshrc.txt

extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2)  tar -jxvf "$1"                        ;;
      *.tar.gz)   tar -zxvf "$1"                        ;;
      *.bz2)      bunzip2 "$1"                          ;;
      *.dmg)      hdiutil mount "$1"                    ;;
      *.gz)       gunzip "$1"                           ;;
      *.tar)      tar -xvf "$1"                         ;;
      *.tbz2)     tar -jxvf "$1"                        ;;
      *.tgz)      tar -zxvf "$1"                        ;;
      *.zip)      unzip "$1"                            ;;
      *.ZIP)      unzip "$1"                            ;;
      *.pax)      cat "$1" | pax -r                     ;;
      *.pax.Z)    uncompress "$1" --stdout | pax -r     ;;
      *.Z)        uncompress "$1"                       ;;
      *) echo "'$1' cannot be extracted/mounted via extract()" ;;
    esac
  else
     echo "'$1' is not a valid file to extract"
  fi
}

function iseek() {
    cd $(ls -a -d */ .. | ipt)
    iseek
}

function jsonprop() {
  cat $2 | tr -d " \t\n\r" | egrep -o 'version\"\:\{(.*?)\}' | sed -e "s/version\"\://g" | sed -e "s/{//g" | egrep -o '\"(.*?):\"' | sed -e 's/\"//g' | sed -e 's/\://g' | sed -e 's/\,//g' | sort | xargs echo
}

function nprun() {
  cat package.json | tr -d " \t\n\r" | egrep -o 'scripts\"\:\{(.*?)\}' | sed -e "s/scripts\"\://g" | sed -e "s/{//g" | egrep -o '\"(.*?):\"' | sed -e 's/\"//g' | sed -e 's/\://g' | sed -e 's/\,//g' | sort | ipt | xargs npm run
}

pman () {
  man -t "${1}" | open -f -a /Applications/Preview.app
}

sman() {
  man "${1}" | col -b | st
}

function change-extension() {
  foreach f (**/*.$1)
    mv $f $f:r.$2
  end
}

function installcask() {
    brew cask install "${@}" 2> /dev/null
}

function movtomp4() {
    ffmpeg -i $1 -vcodec h264 -acodec aac -strict -2 $2
}

function addlocalvar() {
    echo '\rexport '$1 >> ~/.localenv
}

function diskavailable() {
  df | grep $1 | awk '{print $5}'
}

function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* *;
  fi;
}

# Create a data URL from a file
function dataurl() {
  local mimeType=$(file -b --mime-type "$1");
  if [[ $mimeType == text/* ]]; then
    mimeType="${mimeType};charset=utf-8";
  fi
  echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}


# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local port="${1:-8000}";
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}
